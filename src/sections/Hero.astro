---

---

<div class="racesWrapper overflow-x-scroll md:overflow-x-hidden">
  <div class="races h-[100vh] items-center whitespace-nowrap">
    <h2 class="text-white text-[30vw]">Villa Ivan</h2>
  </div>
  <div class="box1 absolute bottom-7 left-12 md:left-24">
    <h2 class="text-white font-secondary text-xl md:text-2xl font-extralight">
      Multimedia Design Studio
    </h2>
  </div>
  <div class="box2 absolute bottom-7 right-8 md:right-16">
    <h2 class="text-white font-secondary text-xl md:text-2xl font-extralight">
      Argentina
    </h2>
  </div>
  <div class="h-[100vh]"></div>
</div>

<style>
  body {
    margin: 0;
    overflow-x: hidden;
  }

  .races {
    width: fit-content;
    display: flex;
    flex-wrap: nowrap;
  }

  .races h2 {
    flex-shrink: 0;
    padding-right: 0.4em;
    padding-left: 0.3em;
    margin: 0;
  }
</style>

<script>
  import { gsap } from "gsap";
  import { ScrollTrigger } from "gsap/ScrollTrigger";

  gsap.registerPlugin(ScrollTrigger);

  document.addEventListener("DOMContentLoaded", () => {
    const races = document.querySelector(".races");
    const box = document.querySelector(".box1");
    const box2 = document.querySelector(".box2");

    function getScrollAmount() {
      let racesWidth = races.scrollWidth;
      return -(500 + racesWidth - window.innerWidth);
    }

    function calculateEndMd() {
      let additionalOffset = window.innerWidth < 768 ? 500 : 250; // Ajuste para móviles
      return `+=${Math.abs(getScrollAmount()) + additionalOffset}`;
    }

    function calculateEndSm() {
      let additionalOffset = window.innerWidth < 768 ? 500 : 0; // Ajuste para móviles
      return `+=${Math.abs(getScrollAmount()) + additionalOffset}`;
    }

    function initScrollAnimation() {
      ScrollTrigger.getAll().forEach((trigger) => trigger.kill());

      const tween = gsap.to(races, {
        x: getScrollAmount,
        duration: 4,
        delay: 0.3,
        ease: "power1.inOut",
      });
      const tween2 = gsap.to(box, {
        x: -500,
        duration: 4,
        delay: 0.3,
        ease: "power1.inOut",
      });
      const tween3 = gsap.to(box2, {
        x: 200,
        duration: 4,
        delay: 0.3,
        ease: "power1.inOut",
      });

      ScrollTrigger.create({
        trigger: ".racesWrapper",
        start: "top 20%",
        end: calculateEndMd, // Usar la función para calcular el 'end'
        animation: tween,
        scrub: 3,
        invalidateOnRefresh: true,
      });
      ScrollTrigger.create({
        trigger: ".racesWrapper",
        start: "top 20%",
        end: calculateEndSm, // Usar la función para calcular el 'end'
        animation: tween2,
        scrub: 3,
        invalidateOnRefresh: true,
        markers: true,
      });
      ScrollTrigger.create({
        trigger: ".racesWrapper",
        start: "top 20%",
        end: calculateEndSm, // Usar la función para calcular el 'end'
        animation: tween3,
        scrub: 3,
        invalidateOnRefresh: true,
        markers: true,
      });
    }

    initScrollAnimation();

    window.addEventListener("resize", initScrollAnimation);
  });
</script>
